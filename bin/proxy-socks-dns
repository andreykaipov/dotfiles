#!/bin/sh
# shellcheck disable=SC1090,SC2154
. "$(cd "$(dirname "$0")" && pwd)/lib/wrapper.sh"

argr localport
argr remotehost

main() {
    rm -rf /tmp/dns-socks-proxy
    mkdir -p /tmp/dns-socks-proxy
    cd /tmp/dns-socks-proxy || return
    genconf

    # idk sudo can't follow symlinks or something (maybe it's a Nix thing?)
    dns_proxy="$(command -v dns_proxy)"

    if [ -z "$dns_proxy" ]; then
        >&2 echo "Expected to find dns_proxy binary"
        exit 1
    fi

    # it's going to overwrite our /etc/resolv.conf so back it up
    sudo cp /etc/resolv.conf /etc/resolv.conf.bak
    sudo chattr -i /etc/resolv.conf

    proxy-socks "$localport" "$remotehost" &
    sudo "$dns_proxy" dnsproxy.conf # goes to background immediately
}

cleanup() {
    sudo chattr -i /etc/resolv.conf
    sudo mv /etc/resolv.conf.bak /etc/resolv.conf
}

genconf() {
    # the resolvers to proxy through our SOCKS proxy
    # TODO make this an argument
    tee resolv.conf >/dev/null <<EOF
10.51.10.195
10.51.10.196
EOF

    tee dnsproxy.conf >/dev/null <<EOF
# socks proxy
socks_addr = 127.0.0.1
socks_port = $localport

# local listener
listen_addr = 127.0.0.1
listen_port = 53

# executes as sudo, but we drop to everybody
set_user  = nobody
set_group = nogroup

# file to read as resolv.conf
resolv_conf          = resolv.conf
rewrite_resolve_conf = true

# file to log to, should be /dev/null unless debugging
log_file = debug.log
EOF
}
